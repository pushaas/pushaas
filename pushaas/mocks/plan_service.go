// Code generated by moq; DO NOT EDIT.
// github.com/matryer/moq

package mocks

import (
	"github.com/pushaas/pushaas/pushaas/models"
	"github.com/pushaas/pushaas/pushaas/services"
	"sync"
)

var (
	lockPlanServiceMockGetAll sync.RWMutex
)

// Ensure, that PlanServiceMock does implement PlanService.
// If this is not the case, regenerate this file with moq.
var _ services.PlanService = &PlanServiceMock{}

// PlanServiceMock is a mock implementation of PlanService.
//
//     func TestSomethingThatUsesPlanService(t *testing.T) {
//
//         // make and configure a mocked PlanService
//         mockedPlanService := &PlanServiceMock{
//             GetAllFunc: func() []models.Plan {
// 	               panic("mock out the GetAll method")
//             },
//         }
//
//         // use mockedPlanService in code that requires PlanService
//         // and then make assertions.
//
//     }
type PlanServiceMock struct {
	// GetAllFunc mocks the GetAll method.
	GetAllFunc func() []models.Plan

	// calls tracks calls to the methods.
	calls struct {
		// GetAll holds details about calls to the GetAll method.
		GetAll []struct {
		}
	}
}

// GetAll calls GetAllFunc.
func (mock *PlanServiceMock) GetAll() []models.Plan {
	if mock.GetAllFunc == nil {
		panic("PlanServiceMock.GetAllFunc: method is nil but PlanService.GetAll was just called")
	}
	callInfo := struct {
	}{}
	lockPlanServiceMockGetAll.Lock()
	mock.calls.GetAll = append(mock.calls.GetAll, callInfo)
	lockPlanServiceMockGetAll.Unlock()
	return mock.GetAllFunc()
}

// GetAllCalls gets all the calls that were made to GetAll.
// Check the length with:
//     len(mockedPlanService.GetAllCalls())
func (mock *PlanServiceMock) GetAllCalls() []struct {
} {
	var calls []struct {
	}
	lockPlanServiceMockGetAll.RLock()
	calls = mock.calls.GetAll
	lockPlanServiceMockGetAll.RUnlock()
	return calls
}
